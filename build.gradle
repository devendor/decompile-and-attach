plugins {
    id 'java'
    id 'org.jetbrains.intellij' version '0.6.3'
}


group 'com.devendortech.intellij'
version '1.8.5'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

intellij {
    version '2020.2'
    plugins = ['java', 'java-decompiler']
}

patchPluginXml {
    // Pulled from rendored .rst
    changeNotes """
    <p><strong>1.8.5 rferguson 11/16/2020</strong></p>
    <ul class="simple">
    <li>Rebuild for 2020.2</li>
    </ul>
    <p><strong>1.8.4 rferguson 12/03/2018</strong></p>
    <ul class="simple">
    <li>Rebuild for 2018.3</li>
    </ul>
    <p><strong>1.8.2 rferguson 09/22/2018</strong></p>
    <ul class="simple">
    <li>Added java-decompiler plugin dependency to build.gradle plugin.xml.</li>
    <li>BugFix - Prior release would blindly produce empty classes with “{ //compiled content” bodies
    when decompile and attach was used before any other decompile activity that triggered legal
    terms acceptance and related key setting. Plugin now reproduced legal disclaimer from java-decompiler
    when needed and sets acceptance key to fix bug.</li>
    </ul>
    <strong>1.8.1 rferguson 09/04/2018</strong>
    <ul class="simple">
    <li>Documentation is prettier.</li>
    </ul>
    <p><strong>1.8 rferguson 09/03/2018</strong></p>
    <ul class="simple">
    <li>Moved plugin to com.devendortech namespace.</li>
    <li>Updated for compatibility with IU-182.4129.33</li>
    <li>Add try / catch so decompile logs warning and continues when something doesn’t decompile.</li>
    <li>Transitioned to gradle plugin dev framework.</li>
    <li>Releasing to IntelliJ as the original author has abandoned his project.</li>
    </ul>
    <p><strong>1.7 rferguson 11/9/2017</strong></p>
    <ul class="simple">
    <li>Fix for idea 172 builds</li>
    <li>plugin.xml in 1.6 excludes support for 2017.2 releases.
    1.5 allows it but doesn’t work change to plugin.xml to allow this
    to install on newer release</li>
    <li>The file list included the jar name itself which was passing through
    to attach and causing an fault</li>
    <li>An empty directory would pass through to decompile and cause a fault.</li>
    <li>Any non-class files were excluded from source export jars which
    limited context like reflections and packages.</li>
    <li>The above covers issues 9, 10, 12 and 13 from <a class="reference external" href="https://github.com/bduisenov/decompile-and-attach/issues">Babur’s github issues</a></li>
    </ul>
    <p><strong>1.6 babur 12/03/2016</strong></p>
    <ul class="simple">
    <li>fixed plugin for Intellij 163</li>
    </ul>
    <p><strong>1.5 babur 12/1/2015</strong></p>
    <ul class="simple">
    <li>jar decompilation continues even if decompilation for some classes failed</li>
    <li>added multiple jars decompilation</li>
    <li>added cancellation for process</li>
    <li>added form for selecting folder where sources would be stored</li>
    <li>switched from BYTECODE_SOURCE_MAPPING to USE_DEBUG_LINE_NUMBERS for decompiler fix.
    See #6 from <a class="reference external" href="https://github.com/bduisenov/decompile-and-attach/issues">Babur’s github issues</a>.</li>
    </ul>
    <p><strong>1.4 babur 11/27/2015</strong></p>
    <ul class="simple">
    <li>decompiled sources are attached to source jar lib instead of creating a new lib</li>
    </ul>
    <p><strong>1.3 11/23/2015 babur</strong></p>
    <ul class="simple">
    <li>added functionality for attaching decompiled sources to owner module of a jar</li>
    </ul>
    <p><strong>1.2 11/18/2015</strong></p>
    <ul class="simple">
    <li>fixed jar archive generation.</li>
    </ul>
    <p><strong>1.1 11/17.2015</strong></p>
    <ul class="simple">
    <li>fixes</li>
    </ul>"""
}
